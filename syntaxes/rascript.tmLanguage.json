{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "RAScript",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#storage"
        },
        {
            "include": "#support"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [{
                "name": "keyword.control.conditional.rascript",
                "match": "\\b(if|else)\\b"
            },
            {
                "name": "keyword.control.loops.rascript",
                "match": "\\b(for|in)\\b"
            },
            {
                "name": "keyword.control.return.rascript",
                "match": "\\b(return)\\b"
            }]
        },
        "storage": {
            "patterns": [{
                "name": "storage.type.functions.rascript",
                "match": "\\b(function)\\b"
            }]
        },
        "support": {
            "patterns": [{
                "name": "support.function.memory.rascript",
                "match": "\\b(byte|word|tbyte|dword|bit0|bit1|bit2|bit3|bit4|bit5|bit6|bit7|low4|high4|bit|prev|prior)\\b"
            },
            {
                "name": "support.function.range.rascript",
                "match": "\\b(range)\\b"
            },
            {
                "name": "support.function.achievement.rascript",
                "match": "\\b(achievement)\\b"
            },
            {
                "name": "support.function.helpers.rascript",
                "match": "\\b(repeated|once|measured|never|unless|always_true|always_false)\\b"
            },
            {
                "name": "support.function.richpresence.rascript",
                "match": "\\b(rich_presence_display|rich_presence_conditional_display|rich_presence_value|rich_presence_lookup)\\b"
            },
            {
                "name": "support.function.leaderboards.rascript",
                "match": "\\b(leaderboard)\\b"
            }]
        },
        "strings": {
            "name": "string.quoted.double.rascript",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.rascript",
                    "match": "\\\\."
                },
                {
                    "name": "constant.text.formats.rascript",
                    "match": "\\b(VALUE|SECS|FRAMES|POINTS|MILLISECS|MINUTES|SECS_AS_MINS)\\b"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash",
                    "begin": "//",
                    "end": "\n",
                    "patterns": [
                        {
                            "include": "#comments"
                        }
                    ]
                }
            ]
        }
    },
    "scopeName": "source.rascript"
}
